---
- name: check DB Tables metrics
  tags: check_database_table_metrics
  block:
  - name: Check table open size
    command: "mysql -ABNe 'select @@table_open_cache;'"
    register: table_open_cache

  - name: Check tables opened
    command: "mysql -ABNe 'select variable_value from information_schema.global_status where variable_name = \"opened_tables\";'"
    register: tables_opened

  - name: Check table definition cache size
    command: "mysql -ABNe 'select @@table_definition_cache;'"
    register: table_defn_cache
    tags: check_table_definition_cache
    
  - name: check open table definitions
    command: "mysql -ABNe 'select variable_value from information_schema.global_status where variable_name = \"Opened_table_definitions\";'"
    register: open_table_definitions
    
  - name: check max memory table size
    command: "mysql -ABNe 'select convert(@@max_heap_table_size /1024 /1024, INTEGER)';"
    register: max_memory_table_size

  - name: check possibly fragmented Tables
    command: "mysql -ABNe 'SELECT concat(TABLE_SCHEMA,\".\", TABLE_NAME) FROM information_schema.tables WHERE table_schema NOT IN (\"mariadb\", \"information_schema\", \"performance_schema\", \"sys\") AND  DATA_FREE > 0 AND ENGINE = \"InnoDB\" AND round((data_free/(index_length+data_length)),2) > 10;'"
    register: Fragmented_Tables

  - name: create report file and write header
    shell: echo "* Check table open cache size" >> {{ reportdir }}/table_metrics_check
    register: file_written
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write report to file
    shell: echo "Table open cache size for {{ ansible_hostname }} - {{ table_open_cache.stdout }} tables" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1

  - name: create report file and write header
    shell: echo "* Check tables opened counter" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write report to file
    shell: echo "tables opened for {{ ansible_hostname }} - {{ tables_opened.stdout }} tables" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
  
  - name: create report file and write header
    shell: echo "* Check Table definitions cache size" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write report to file
    shell: echo "Table definition cache size for {{ ansible_hostname }} - {{ table_defn_cache.stdout }} definitions" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
  
  - name: create report file and write header
    shell: echo "* Check table definitions opened counter" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write report to file
    shell: echo "table definitions opened for {{ ansible_hostname }} - {{ open_table_definitions.stdout }} definitions" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
  
  - name: create report file and write header
    shell: echo "* Check max memory table size" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write report to file
    shell: echo "Max memory table size for {{ ansible_hostname }} - {{ max_memory_table_size.stdout }} MB" >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1

  - name: create report file and write header
    shell: echo "* Check Fragmented Table(s) " >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write report to file
    shell: echo "Number of possibly Fragmented Tables in {{ ansible_hostname }} - {{ Fragmented_Tables.stdout.split('\n') | length }} " >> {{ reportdir }}/table_metrics_check
    shell: echo "Possibly Fragmented Tables in {{ ansible_hostname }} - {{ Fragmented_Tables.stdout_lines }} " >> {{ reportdir }}/table_metrics_check
    delegate_to: 127.0.0.1

  - name: write HTML file
    template:
      src: sample_task_template.j2
      dest: table.html
      mode: 0777
    delegate_to: 127.0.0.1

  - blockinfile:
      marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
      path: /usr/local/mariadb_rdba/etc/mariadb_performance_audit/def2.html
      create: true
      block: "{{ lookup('template', item) }}"
    loop:
        - sample_task_template.j2
    delegate_to: 127.0.0.1

  - name: echo report directory
    debug: msg="report written to file - {{ reportdir }}/table_metrics_check"
