---
- name: check database version
  tags: check_db_version
  block:
  - name: Check_Existing_DB_Service
    script: check_existing_db_service.sh
    register: db_service_check

  - name: Display_DB_Service_Status
    debug: 
      msg: "{{ db_service_check.stdout }}"
    when: db_service_check.stdout | length > 0

  - name: Check DB version
    command: "mysql -BNe 'select @@version;'"
    register: mariadb_version

  - name: create report file and write header
    shell: echo "* Check MariaDB version" >> {{ reportdir }}/dbVersion_check
    register: file_written
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write MariaDB version to file
    shell: echo "version for {{ ansible_hostname }} - {{ mariadb_version.stdout }} " >> {{ reportdir }}/dbVersion_check
    register: file_written
    delegate_to: 127.0.0.1
    when: mariadb_version | length > 0

  - name: Save CSV headers
    lineinfile:
      dest: "{{ csv_path }}/{{ version_csv_filename }}"
      line: "{{ mariadb_version_headers }}"
      create: true
      state: present
    delegate_to: localhost
    run_once: true

  - name: Build out CSV file
    lineinfile:
      dest: "{{ csv_path }}/{{ version_csv_filename }}"
      line: "{{ inventory_hostname }},{{ mariadb_version.stdout }},Upgrade to the latest MariaDB Enterprise Server for the series"
      create: true
      state: present
    delegate_to: localhost

  - name: Read in CSV to variable
    community.general.read_csv:
      path: "{{ csv_path }}/{{ version_csv_filename }}"
    register: version_csv_file 
    delegate_to: localhost
    run_once: true

  - name: write HTML file
    template:
      src: mariadb_version.j2
      dest: mariadb_version_check.html
      mode: 0777
    delegate_to: 127.0.0.1  
    
  - name: echo report directory
    debug: msg="report written to file - {{ reportdir }}/dbVersion_check"
