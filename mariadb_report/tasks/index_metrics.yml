---
- name: check InnoDB Index metrics
  tags: check_InnoDB_index_metrics
  block:
  - name: check Redundant / Duplicate Indexes
    command: "mysql -ABNe 'SELECT concat(\"Table: \",s.INDEXED_COL, \" | \"),\"INDEXES: \",GROUP_CONCAT(INDEX_NAME) FROM ( SELECT INDEX_NAME,GROUP_CONCAT(CONCAT(TABLE_SCHEMA,\".\",TABLE_NAME,\".\",COLUMN_NAME) ORDER BY CONCAT(SEQ_IN_INDEX,COLUMN_NAME)) \"INDEXED_COL\" FROM INFORMATION_SCHEMA.STATISTICS GROUP BY INDEX_NAME )as s GROUP BY INDEXED_COL HAVING COUNT(1)>1;'"
    register: redundant_indexes

  - name: create report file and write header
    shell: echo "* Check Redundant / Redundant Indexes" >> {{ reportdir }}/innodb_index_check
    delegate_to: 127.0.0.1
    run_once: true
    when: inventory_hostname == ansible_play_hosts_all[0]

  - name: write report to file
    shell: echo -e "Redundant/Duplicate indexes in {{ ansible_hostname }} - \t [ {{ redundant_indexes.stdout }} ] \n " >> {{ reportdir }}/innodb_index_check
    delegate_to: 127.0.0.1

  - name: echo report directory
    debug: msg="report written to file - {{ reportdir }}/innodb_index_check"

  - name: Save CSV headers
    lineinfile:
      dest: "{{ csv_path }}/{{ indexes_csv_filename }}"
      line: "{{ indexes_headers }}"
      create: true
      state: present
    delegate_to: localhost
    run_once: true

  - name: Build out CSV file
    lineinfile:
      dest: "{{ csv_path }}/{{ indexes_csv_filename }}"
      line: "{{ inventory_hostname }},{{ redundant_indexes.stdout }}"
      create: true
      state: present
    delegate_to: localhost

  - name: Read in CSV to variable
    community.general.read_csv:
      path: "{{ csv_path }}/{{ indexes_csv_filename }}"
    register: indexes_csv_file 
    delegate_to: localhost
    run_once: true

  - name: write HTML file
    template:
      src: indexes_template.j2
      dest: indexes_checks.html
      mode: 0777
    delegate_to: 127.0.0.1
